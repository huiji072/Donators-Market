[{"C:\\Donator-Market\\donator-market-docker\\frontend\\src\\index.js":"1","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\App.js":"2","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\reportWebVitals.js":"3","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\fragment\\Header.jsx":"4","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\fragment\\Footer.jsx":"5","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\ItemForm.jsx":"6","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\login\\Logout.jsx":"7","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\login\\Login.jsx":"8","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\login\\Join.jsx":"9","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\ItemDtl.jsx":"10","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\ItemUpdate.jsx":"11","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\ItemMng.jsx":"12","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\main\\Main.jsx":"13","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\order\\OrderHist.jsx":"14","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\offer\\OfferHist.jsx":"15","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\cart\\CartList.jsx":"16","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\test\\CheckboxTest.jsx":"17","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\test\\ItemDtlTest.jsx":"18","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\test\\ItemFormTest.jsx":"19","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\management\\MemberManagement.jsx":"20","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\logistics\\Logistics.jsx":"21","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\Recomment.jsx":"22","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\main\\MainList.jsx":"23","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\offer\\OfferHistList.jsx":"24","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\order\\OrderHistList.jsx":"25"},{"size":536,"mtime":1670552065974,"results":"26","hashOfConfig":"27"},{"size":317,"mtime":1670552066048,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1670552065924,"results":"29","hashOfConfig":"27"},{"size":7616,"mtime":1670552067126,"results":"30","hashOfConfig":"27"},{"size":1020,"mtime":1670552067175,"results":"31","hashOfConfig":"27"},{"size":6729,"mtime":1670552067028,"results":"32","hashOfConfig":"27"},{"size":554,"mtime":1670552066759,"results":"33","hashOfConfig":"27"},{"size":2897,"mtime":1670552066782,"results":"34","hashOfConfig":"27"},{"size":4041,"mtime":1670552066830,"results":"35","hashOfConfig":"27"},{"size":15112,"mtime":1670552067077,"results":"36","hashOfConfig":"27"},{"size":6109,"mtime":1670552066954,"results":"37","hashOfConfig":"27"},{"size":7245,"mtime":1670552066979,"results":"38","hashOfConfig":"27"},{"size":998,"mtime":1670552066661,"results":"39","hashOfConfig":"27"},{"size":414,"mtime":1670552066469,"results":"40","hashOfConfig":"27"},{"size":415,"mtime":1670552066540,"results":"41","hashOfConfig":"27"},{"size":6919,"mtime":1670552067370,"results":"42","hashOfConfig":"27"},{"size":4055,"mtime":1670552066247,"results":"43","hashOfConfig":"27"},{"size":603,"mtime":1670552066221,"results":"44","hashOfConfig":"27"},{"size":905,"mtime":1670552066198,"results":"45","hashOfConfig":"27"},{"size":5268,"mtime":1670552066589,"results":"46","hashOfConfig":"27"},{"size":2754,"mtime":1670552066710,"results":"47","hashOfConfig":"27"},{"size":168,"mtime":1670552066929,"results":"48","hashOfConfig":"27"},{"size":5319,"mtime":1670552066637,"results":"49","hashOfConfig":"27"},{"size":7126,"mtime":1670552066517,"results":"50","hashOfConfig":"27"},{"size":9060,"mtime":1670552066444,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"acyoph",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},"C:\\Donator-Market\\donator-market-docker\\frontend\\src\\index.js",[],[],"C:\\Donator-Market\\donator-market-docker\\frontend\\src\\App.js",["145","146"],[],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './fragment/Header';\nimport React, { useState, useEffect } from 'react';\nimport Footer from './fragment/Footer';\n\n\nfunction App() {\n\n  return (\n    <>\n    <Header></Header>\n    <Footer></Footer>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Donator-Market\\donator-market-docker\\frontend\\src\\fragment\\Header.jsx",["147","148","149","150","151","152","153","154","155","156","157","158","159"],[],"import React, { useState, useEffect, Component, useContext } from 'react';\nimport axios from 'axios'\nimport './Header.css';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport {  BrowserRouter as Router,  Routes,  Route} from \"react-router-dom\";\nimport Login from '../login/Login';\nimport ItemForm from '../item/ItemForm';\nimport ItemDtl from '../item/ItemDtl';\nimport OrderHist from '../order/OrderHist';\nimport OfferHist from '../offer/OfferHist';\nimport Join from '../login/Join';\nimport Main from '../main/Main';\nimport ItemMng from '../item/ItemMng';\nimport CartList from '../cart/CartList';\nimport ItemDtlTest from '../test/ItemDtlTest';\nimport ItemFormTest from '../test/ItemFormTest';\nimport ItemUpdate from '../item/ItemUpdate';\nimport CheckboxTest from '../test/CheckboxTest';\nimport Logout from '../login/Logout';\nimport MemberManagement from '../management/MemberManagement';\nimport Logistics from '../logistics/Logistics';\n\n\nfunction Header(props) {\n    const [role, setRole] = useState('');\n    const [email, setEmail] = useState('');\n\n    const [ testStr, setTestStr ] = useState('');\n    // 변수 초기화\n    function callback(str) {\n      setTestStr(str);\n    }\n\n    \n    useEffect(() => {\n        axios({\n            url: '/members/loginInfo',\n            method: \"post\",\n            headers: { \n              'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n              'Content-Type': 'application/json' \n            }\n            }).then((res) => {\n              callback(res.data);\n              if(res.data === 'anonymousUser') {\n                setEmail('anonymousUser');\n              }else {\n                setEmail(res.data.email);\n                setRole(res.data.role);\n              }\n            })\n    }, [])\n\n    return(\n        <>\n        <div class=\"titleHeader\">\n            <h1><a class=\"title\" href=\"/\">Donators Market</a></h1> <br/>\n        </div>\n        <div>\n            {\n                (email == 'anonymousUser' || email == '')\n                ? <>\n                <Navbar bg=\"primary\" variant=\"dark\">\n                    <Container>\n                    <Navbar.Brand href=\"/\">DonatorsMarket</Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/cart/Cart\">장바구니</Nav.Link>\n                        <Nav.Link href=\"/members/login\">로그인</Nav.Link>\n                        <Nav.Link href=\"/login/Join\">회원가입</Nav.Link>\n                    </Nav>\n                    </Container>\n                </Navbar>\n                </>\n                :( role == 'ROLE_ADMIN' || role == 'ADMIN')\n                ?<><p  className='loginInfo'>[기부자&피기부 기관] {email}</p>\n                    <Navbar bg=\"primary\" variant=\"dark\">\n                        <Container>\n                        <Navbar.Brand href=\"/\">DonatorsMarket</Navbar.Brand>\n                        <Nav className=\"me-auto\">\n                            <Nav.Link href=\"/item/ItemForm\">상품등록</Nav.Link>\n                            <Nav.Link href=\"/item/ItemMng\">상품관리</Nav.Link>\n                            <Nav.Link href=\"/cart/Cart\">장바구니</Nav.Link>\n                            <Nav.Link href=\"/order/OrderHist\">구매이력</Nav.Link>\n                            <Nav.Link href=\"/offer/OfferHist\">판매이력</Nav.Link>\n                            <Nav.Link href=\"/members/logout\">로그아웃</Nav.Link>\n                            <Nav.Link href=\"/logistics/Logistics\">배송조회</Nav.Link>\n                        </Nav>\n                        </Container>\n                    </Navbar>\n                    </>\n                    \n                    :(role == 'ROLE_SELLER' || role == 'SELLER')\n                        ?<><p className='loginInfo'>[기부자] {email}</p>\n                        <Navbar bg=\"primary\" variant=\"dark\">\n                            <Container>\n                            <Navbar.Brand href=\"/\">DonatorsMarket</Navbar.Brand>\n                            <Nav className=\"me-auto\">\n                                <Nav.Link href=\"/item/ItemForm\">상품등록</Nav.Link>\n                                <Nav.Link href=\"/item/ItemMng\">상품관리</Nav.Link>\n                                <Nav.Link href=\"/offer/OfferHist\">판매이력</Nav.Link>\n                                <Nav.Link href=\"/members/logout\">로그아웃</Nav.Link>\n                            </Nav>\n                            </Container>\n                        </Navbar>\n                        </>\n                        :(role == 'ROLE_BUYER' || role == 'BUYER')\n                            ?<><p className='loginInfo'>[피기부 기관] {email}</p>\n                            <Navbar bg=\"primary\" variant=\"dark\">\n                            <Container>\n                            <Navbar.Brand href=\"/\">DonatorsMarket</Navbar.Brand>\n                            <Nav className=\"me-auto\">\n                                <Nav.Link href=\"/cart/Cart\">장바구니</Nav.Link>\n                                <Nav.Link href=\"/order/OrderHist\">구매이력</Nav.Link>\n                                <Nav.Link href=\"/logistics/Logistics\">배송조회</Nav.Link>\n                                <Nav.Link href=\"/members/logout\">로그아웃</Nav.Link>\n                            </Nav>\n                            </Container>\n                        </Navbar>\n                        </>\n                        :(role == 'ROLE_MANAGER' || role == 'MANAGER')\n                        ?<><p className='loginInfo'>[관리자] {email}</p>\n                        <Navbar bg=\"primary\" variant=\"dark\">\n                            <Container>\n                            <Navbar.Brand href=\"/\">DonatorsMarket</Navbar.Brand>\n                            <Nav className=\"me-auto\">\n                                <Nav.Link href=\"/members/management\">회원목록</Nav.Link>\n                                <Nav.Link href=\"/members/logout\">로그아웃</Nav.Link>\n                            </Nav>\n                            </Container>\n                        </Navbar>\n                        </>\n                        :<></>\n            }\n            \n        </div>\n        <Router>\n            <Routes>\n                <Route path='/' element={<Main/>} />\n                <Route path='/item/ItemForm' element={<ItemForm/>} />\n                <Route path='/item/ItemMng' element={<ItemMng/>} />\n                <Route path='/cart/Cart' element={<CartList/>} />\n                <Route path='/order/OrderHist' element={<OrderHist/>} />\n                <Route path='/offer/OfferHist' element={<OfferHist/>} />\n                <Route path='/members/login' element={<Login/>} />\n                <Route path='/login/Join' element={<Join/>} />\n                <Route path='/:itemId' element={<ItemDtl/>} />\n                {/* <Route path='/:itemId' element={<Comment/>} /> */}\n                <Route path='/test/itemDtlTest' element={<ItemDtlTest/>} />\n                <Route path='/item/update/:itemId' element={<ItemUpdate/>} />\n                <Route path='/test/itemForm' element={<ItemFormTest/>} />\n                <Route path='/test/checkboxTest' element={<CheckboxTest/>} />\n                <Route path='/members/logout' element={<Logout/>} />\n                <Route path='/members/management' element={<MemberManagement/>} />\n                <Route path='/logistics/Logistics' element={<Logistics/>} />\n            </Routes>\n        </Router>\n        </>\n    );       \n}\nexport default Header;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\fragment\\Footer.jsx",[],[],"C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\ItemForm.jsx",["160","161","162","163"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport './ItemForm.css';\nimport AWS from \"aws-sdk\"\nimport { set } from 'react-hook-form';\n\nfunction ItemForm(props) {\n\n    // s3 설정\n    const ACCESS_KEY = 'AKIAVI3DPJDJLXGB6QBM';\n    const SECRET_ACCESS_KEY = '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';\n    const REGION = \"ap-northeast-2\";\n    const S3_BUCKET = 'shopitemimage';\n\n    AWS.config.update({\n        accessKeyId: ACCESS_KEY,\n        secretAccessKey: SECRET_ACCESS_KEY\n      });\n      \n      const myBucket = new AWS.S3({\n        params: { Bucket: S3_BUCKET},\n        region: REGION,\n      });\n\n\n\n\n    let formData = new FormData();\n\n    const [ testStr, setTestStr ] = useState('');\n    // 변수 초기화\n    function callback(str) {\n      setTestStr(str);\n    }\n\n    function itemNew(e){\n        e.preventDefault();\n    }\n\n    const[itemSellStatus, setItemSellStatus] = useState(\"SELL\");\n    const[itemNm, setItemNm] = useState(\"\");\n    const[stockNumber, setStockNumber] = useState(\"\");\n    const[itemDtl, setItemDtl] = useState(\"\");\n\n    const handleChangeItemSellStatue = (event) => {\n        setItemSellStatus(event.target.value);\n    }\n\n    const handleChangeItemNm = (event) => {\n        setItemNm(event.target.value);\n    }\n\n    const handleChangeStockNumber = (event) => {\n        setStockNumber(event.target.value);\n    }\n\n    const handleChangeItemDtl = (event) => {\n        setItemDtl(event.target.value);\n    }\n\n    // const handleChangeItemImgDto = (e) => {\n    //     formData.append(\"imgFile\", e.target.files[0]);\n    // }\n\n    const [img, setImg] = useState('')\n\n    const onFileChange = (e) => {\n        setImg(e.target.files[0])\n    }\n    const file = img;\n    formData.append(\"imgFile\", img);\n   \n\n    const data = {\n        itemSellStatus: itemSellStatus,\n        itemNm: itemNm,\n        stockNumber: stockNumber,\n        itemDetail: itemDtl\n    }\n\n    const jsonData = JSON.stringify(data)\n\n    const uploadImageFile = () => {\n        const params = {\n            ACL: 'public-read',\n            Body: file,\n            Bucket: S3_BUCKET,\n            Key: \"itemImg/\" + file.name\n          };\n    \n          myBucket.putObject(params)\n          .on('httpUploadProgress', (evt) => {\n            setTimeout(() => {\n              setImg(null);\n            }, 3000)\n          })\n          .send((err) => {\n            if (err) console.log(err)\n          })\n    } \n\n\n    \n    formData.append(\"data\", new Blob([jsonData], {type: \"application/json\"}));\n\n    // 상품 등록\n    const sendItemRegisterRequest = (event) => {\n\n        // s3에 이미지 등록\n        uploadImageFile();\n        \n        axios({\n            url: '/admin/item/new',\n            method: 'POST',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            data : formData\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"상품 등록 중 에러가 발생하였습니다.\");\n            }\n            window.location.href = \"/\";\n        }).catch((error) => {\n            if(error.response.status === 403 || error.response.status === 400) {\n                alert(\"상품 등록 권한이 없습니다.\")\n                window.location.href = \"/members/login\"\n            }\n        })\n\n\n\n    }\n\n        return(\n            <div className=\"itemFormContainer\">\n\n                <div>\n                    <h2>상품 등록</h2>\n                </div>\n\n            <form onSubmit={itemNew}>\n                <div class=\"form-group\">\n                    <select class=\"form-select\" value={itemSellStatus} onChange={handleChangeItemSellStatue}>\n                        <option value=\"SELL\">판매중</option>\n                        <option value=\"SOLD_OUT\">품절</option>\n                    </select>\n                </div>\n\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">상품명</span>\n                        \n                    </div>\n                    <input value={itemNm} onChange={handleChangeItemNm}\n                    class=\"form-control\" type=\"text\" placeholder=\"상품명을 입력해주세요\"></input>\n                </div>\n\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">재고</span>\n                    </div>\n                    <input value={stockNumber} onChange={handleChangeStockNumber}\n                    class=\"form-control\" type=\"number\" placeholder=\"상품의 재고를 입력해주세요\"></input>\n                </div>\n\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">상품 상세 내용</span>\n                    </div>\n                    <textarea value={itemDtl} onChange={handleChangeItemDtl}\n                    class=\"form-control\"></textarea>   \n\n                </div>\n\n                {/* 이미지 */}\n\n                {/* <div >\n                    <div class=\"form-group\" each=\"itemImgDto, status: ${itemFormDto.itemImgDtoList}\">\n                        <div class=\"custom-file img-div\">\n                            <input onChange={handleChangeItemImgDto}\n                            type=\"file\" class=\"custom-file-input\" name=\"imgFile\"/>\n                            <input type=\"hidden\" name=\"itemImgIds\" value=\"${itemImgDto.id}\"></input>\n                            <label class=\"custom-file-label\" ></label>\n                        </div>\n                    </div>\n                </div> */}\n\n                <div>\n                    <input type=\"file\" name=\"imgFile\" onChange={onFileChange}/>\n                </div>\n            \n\n                {/* 저장 버튼 */}\n                <div className=\"d-grid\">\n                    <button className=\"btn btn-primary\"\n                    onClick={() => sendItemRegisterRequest()}\n                    formAction='/admin/item/new'\n                    >\n                        Submit\n                    </button>\n                </div>\n\n                {/* 수정 버튼 */}\n                {/* <div className=\"d-grid\">\n                    <button type=\"submit\" className=\"btn btn-primary\"\n                    onClick={()=>updateItem()}\n                    formAction='/admin/item/334'\n                    >\n                        Update\n                    </button>\n                </div> */}\n\n            </form>\n            </div>\n        );\n}\n\nexport default ItemForm;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\login\\Logout.jsx",["164","165","166","167"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\n\nfunction Logout() {\n\n  localStorage.setItem(\"ACCESS_TOKEN\", null);\n  window.location.href = \"/\";\n\n    // axios({\n    //     url: '/members/logout',\n    //     method: 'get'\n    //   }).then((res) => {\n    //     callback(res.data);\n    //     alert(\"aaa\")\n    //     localStorage.setItem(\"ACCESS_TOKEN\", null);\n    //     window.location.href = \"/\";\n    //   }).catch((error) => {\n    //     console.log(error);\n    //     alert(error)\n    //   })\n\n\n}\n\nexport default Logout;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\login\\Login.jsx",["168","169","170","171","172"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport './Login.css';\nimport Header from '../fragment/Header'\n\nfunction Login() {\n\n  let formData = new FormData();\n\n  const [ testStr, setTestStr ] = useState('');\n  // 변수 초기화\n  function callback(str) {\n    setTestStr(str);\n  }\n\n  const signInForm = (e) => {\n    e.preventDefault();\n  }\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginName, setLoginName] = useState('');\n\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value);\n  }\n\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value);\n  }\n\n  formData.append(\"email\", email);\n  formData.append(\"password\", password);\n\n  var jsonData = JSON.stringify({\n    \"email\": email,\n    \"password\": password\n  });\n  \n\nconst sendLoginRequest = () => {\n\n      axios({\n        url: '/members/login/token',\n        method: \"post\",\n        headers: { \n          'Content-Type': 'application/json' \n        },\n        data: jsonData\n      }).then((res) => {\n        callback(res.data);\n        if(res.data.token) {\n          localStorage.setItem(\"ACCESS_TOKEN\", res.data.token);\n          window.location.href = \"/\";\n        }\n      })\n\n      \n\n}\n\n  return(\n    <div className=\"loginContainer\">\n    <h2 className=\"mb-4\">로그인</h2>\n    {/* <h3>{testStr.loginInfo[0].loginName}</h3> */}\n         <form className=\"loginForm\" onSubmit={signInForm}>\n            <div className=\"mb-3\">\n              <label>Email address</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"form-control\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={handleChangeEmail}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n                value={password}\n                onChange={handleChangePassword}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <div className=\"custom-control custom-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  id=\"customCheck1\"\n                />\n                <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n                  Remember me\n                </label>\n              </div>\n            </div>\n\n            <div className=\"d-grid\">\n              <button className=\"btn btn-primary\" id='siginBtn'\n              onClick={sendLoginRequest}>\n                Sign in\n              </button>\n            </div>\n\n          </form>\n  </div>\n);      \n}\n\nexport default Login;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\login\\Join.jsx",["173","174","175","176"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport './Join.css';\n\n\nfunction Join() {\n\n  const [ testStr, setTestStr ] = useState('');\n  // 변수 초기화\n  function callback(str) {\n    setTestStr(str);\n  }\n\n  function joinNew(e){\n    e.preventDefault();\n  }\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  const handleChangeName = (event) => {\n    setName(event.target.value);\n  }\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value);\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value);\n  }\n  const handleChangeAddress = (event) => {\n    setAddress(event.target.value);\n  }\n\n  let [sellerId, setSellerId] = useState('');\n  let [buyerId, setBuyerId] = useState('');\n  const handleCheckboxSeller = (event) => {\n    if(event.target.checked){\n      setSellerId(event.target.value);\n    }else{\n      setSellerId('');\n    }\n  }\n\n  const handleCheckboxBuyer = (event) => {\n    if(event.target.checked){\n      setBuyerId(event.target.value);\n    }else{\n      setBuyerId('');\n    }\n  }\n\n\n  const joinData = {\n    name: name,\n    email: email,\n    password: password,\n    address: address\n  }\nconst jsonData = JSON.stringify(joinData)\n\nconst sendJoinRequest = () => {\n  axios({\n    url: '/members/new',\n    method: \"post\",\n    headers: { 'Content-Type': 'application/json' },\n    data: jsonData,\n    params: {\n      checkSeller: sellerId,\n      checkBuyer: buyerId\n    }\n  }).then((res) => {\n    callback(res.data);\n    if(res.data.problem  != false) {\n      alert(\"회원가입 중 문제가 발생하였습니다.\")\n    }else if(buyerId != '') {\n      alert(\"회원가입이 승인될 때까지 기다려주십시오.\")\n    window.location.href = \"/\";\n    }else {\n    window.location.href = \"/\";\n    }\n  }).catch((error) => {\n  })\n}\n\n\nreturn(\n  <div class=\"joinContainer\">\n    <h2 class=\"mb-4\">회원가입</h2>\n      <form class=\"JoinForm\" onSubmit={joinNew} object={joinData}>\n\n      <div className='form-group'>\n        <input onChange={handleCheckboxSeller} type='checkbox' name='chkseller' value='chkseller' className=\"custom-control-input\"/>\n        <label className=\"custom-control-label\">기부자</label>\n          <br/>\n          <input onChange={handleCheckboxBuyer} type='checkbox' name='chk' value='chkbuyer'className=\"custom-control-input\"/>\n        <label className=\"custom-control-label\">피기부 기관</label>\n        </div>\n\n          <div className=\"mb-3\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={handleChangeName}\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label>Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={handleChangeEmail}\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={handleChangePassword}\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label>Address</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter address\"\n              value={address}\n              onChange={handleChangeAddress}\n            />\n          </div>\n\n          <div className=\"d-grid\">\n            <button type=\"submit\" className=\"btn btn-primary\"\n            onClick={() => sendJoinRequest()}\n             >\n              Submit\n            </button>\n          </div>\n        </form>\n  </div>\n);        \n}\n\nexport default Join;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\ItemDtl.jsx",["177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],[],"import React, { useState, useEffect } from 'react';\nimport {useParams} from \"react-router\"\nimport axios from 'axios'\nimport './ItemDtl.css';\nimport Recomment from './Recomment';\n\nfunction ItemDtl() {\n\n    // 장바구니에 담기\n    const addCart = (id, count) => {\n\n        const paramData = {\n            itemId: id,\n            count: orderStockNumber\n        }\n\n        const param = JSON.stringify(paramData);\n\n        axios({\n            url: '/cart/new',\n            method: 'POST',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            data: param\n        }).then((res) => {\n            callback(res.data);\n            alert(\"상품을 장바구니에 담았습니다.\");\n            window.location.href='/cart/Cart';\n        })\n    }\n\n    // 주문하기\n    const order = (id, count) => {\n\n        const paramData = {\n            itemId: id,\n            count: orderStockNumber\n        }\n        const param = JSON.stringify(paramData);\n\n        axios({\n            url: '/offer/new',\n            method: 'POST',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n            },\n            data: param\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"문제가 발생하였습니다.\")\n            }\n            alert(\"구매가 완료 되었습니다.\");\n            window.location.href='/order/OrderHist';\n\n            // axios({\n            //     url: '/queue/send/invoice',\n            //     method: 'POST',\n            //     headers: { \n            //         'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n            //         'Content-Type': 'application/json' \n            //     },\n            //     data: param\n            // })\n\n            axios({\n                url: '/queue/invoice/order',\n                method: 'POST',\n                headers: { \n                    'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                    'Content-Type': 'application/json' \n                },\n                data: param\n            })\n            \n            \n        }).catch((error) => {\n            if(error.response.status === 403 || error.response.status === 400) {\n                alert(\"주문 권한이 없습니다.\")\n                window.location.href = \"/members/login\"\n            }\n        })\n\n    }\n\n\n    // 질문 등록\n    const [question, setQuestion] = useState('');\n\n    const inputQuestion = (event) => {\n        setQuestion(event.target.value);\n      }\n\n    const registerQuestion = (id) => {\n\n        const itemId = id;\n        const paramData = {\n            question: question,\n            itemId: itemId\n        }\n        const param = JSON.stringify(paramData);\n        \n        axios({\n            url: '/item/registerQuestion',\n            method: 'POST',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            data: param\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"질문 등록 중 문제가 발생하였습니다.\");\n                window.location.href='/'+itemId;\n            } else {\n                alert(\"질문이 등록되었습니다.\");\n                window.location.href='/'+id;\n            }\n            \n        }).catch((error) => {\n            if(error.response.status === 403 || error.response.status === 400) {\n                alert(\"질문 권한이 없습니다.\")\n                window.location.href = \"/members/login\"\n            }\n        })      \n    }    \n\n    // 답변 클릭 시 답변 폼\n\n    const [answerForm, setAnswerForm] = useState(false);\n    const [answerId, setAnswerId] = useState('');\n\n    const showAnswerForm = (itemId, e) => {\n        setAnswerId(itemId);\n    }\n\n\n\n\n    //답변 등록\n    const [answer, setAnswer] = useState('');\n\n    const inputAnswer = (event) => {\n        setAnswer(event.target.value);\n    }\n\n    const registerAnswer = (itemId, questionId) => {\n\n        const paramData = {\n            questionId: questionId,\n            itemId: itemId,\n            answerInput: answer\n        }\n\n        const param = JSON.stringify(paramData);\n\n        axios({\n            url: '/item/registerAnswer',\n            method: 'POST',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            data: param\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"답변 등록 중 문제가 발생하였습니다.\");\n                window.location.href='/'+itemId;\n            }else {   \n                alert(\"답변이 등록되었습니다.\");\n                window.location.href='/'+itemId;\n            }\n        }).error((error) => {\n            if(error.response.status === 403 || error.response.status === 400) {\n                alert(\"답변 권한이 없습니다.\")\n                window.location.href = \"/members/login\"\n            }\n        })        \n    }    \n\n    // 구매수량 가져오기\n    const [orderStockNumber, setOrderStockNumber] = useState('1');\n\n    const handleChangeOrderStockNumber = (event) => {\n        setOrderStockNumber(event.target.value)\n    }\n\n    const { itemId } = useParams();\n    \n\n\n// 데이터 가져오기\n    const [ testStr, setTestStr ] = useState('');\n    const [pageNum, setPageNum] = useState(0)\n    const [commentLength, setCommentLength] = useState(0)\n    const url = '/itemDtl/'+itemId\n\n    // 변수 초기화\n    function callback(str) {\n      setTestStr(str);\n    }\n\n    useEffect(\n        () => {\n          axios({\n              url: url,\n              method: 'GET',\n              params: {\n                \"pageNum\": pageNum\n              }\n          }).then((res) => {\n              callback(res.data);\n              console.log(res.data)\n              setCommentLength(res.data.commentCount)\n              if(res.data.problem != false) {\n                alert(\"상품을 불러오는 중 문제가 발생하였습니다.\")\n              }\n          })\n        }, []\n    );\n\n    let arr = []\n    for(let i = 0 ; i < Math.ceil(commentLength/5) ; i++) {\n        arr.push(i+1)\n    }\n\n    // 페이징\n    const prevPage = (e) => {\n        e.preventDefault();\n        if (pageNum === 0) {\n            alert(\"첫번째 페이지 입니다.\")\n        } else {\n            setPageNum(pageNum - 1);\n            axios({\n                url: url,\n                method: 'GET',\n                params: {\n                    \"pageNum\": pageNum-1\n                }\n            }).then((res) => {\n                callback(res.data);\n            })\n        }\n        \n    }\n\n    const nextPage = (pageNum, e) => {\n        e.preventDefault();\n        if(pageNum >= Math.ceil(commentLength/5) - 1) {\n            alert(\"마지막 페이지입니다.\")\n        }else {\n            setPageNum(pageNum + 1);\n            axios({\n                url: url,\n                method: 'GET',\n                params: {\n                    \"pageNum\": pageNum+1\n                }\n            }).then((res) => {\n                callback(res.data);\n            })\n        }\n    }\n\n    const clickPage = (arr, e) => {\n        e.preventDefault();\n        setPageNum(arr)\n        axios({\n            url: url,\n            method: 'GET',\n            params: {\n                \"pageNum\": arr\n            }\n        }).then((res) => {\n            callback(res.data);\n        })\n    }\n\n\n\n    return(\n        <div className=\"itemDtl\">\n\n            {testStr.item && testStr.item.map ((item) => {\n                return(\n                    <>\n                    <input type=\"hidden\" id=\"itemId\"/>\n\n                        <div class=\"d-flex\" >\n                            <div class=\"repImgDiv\" >\n                            <img src={\"https://shopitemimage.s3.ap-northeast-2.amazonaws.com/itemImg/\"+item.imgDtoList[0].oriImgName} class = \"itemDtlImg\" />\n                            </div>\n                            <div class=\"wd50ItemDtl\">\n                                <span class=\"badge badge-primary mgb-15\">\n                                    판매중\n                                </span>\n                                <span class=\"badge btn-danger mgb-15\" >\n                                    품절\n                                </span>\n                                <div class=\"h4\" >{item.name}</div>\n                                <hr class=\"my-4\"/>\n\n                                <div class=\"wd50\">\n                                    <div class=\"h4\">{item.stockNumber}</div>\n                                    <hr class=\"my-4\"/>\n                                </div>\n\n                                <div class=\"text-right\">\n\n                                    <div class=\"input-group w-50\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\">구매수량</span>\n                                        </div>\n                                        <input type=\"number\" name=\"count\" id=\"count\" class=\"form-control\" \n                                        min=\"1\" max={item.stockNumber} value={orderStockNumber} defaultValue=\"1\"\n                                        onChange={handleChangeOrderStockNumber}/>\n                                    </div>\n                                </div>\n                                <hr class=\"my-4\"/>\n\n                                <div class=\"text-right\">\n                                    <button type=\"button\" class=\"btn btn-light border border-primary btn-lg\" onClick={()=>addCart(item.id, item.stockNumber)}>장바구니 담기</button>\n                                    <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={()=>order(item.id, item.stockNumber)}>주문하기</button>\n                                </div>\n                                <div  class=\"text-right\">\n                                    {/* <button type=\"button\" class=\"btn btn-danger btn-lg\">{item.sellStatus}</button> */}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"jumbotron jumbotron-fluid mgt-30\" >\n                            <div class=\"itemDtlExplain\">\n                                <h3 class=\"display-5\">상품 상세 설명</h3>\n                                <hr class=\"my-4\"/>\n                                <p class=\"lead\">{item.dtl}</p>\n                            </div>\n                        </div>\n\n                        <br/>\n\n{/* 질문과 답변 */}\n     <>\n     <div class=\"commentQuestionForm\" >\n        <textarea onChange={inputQuestion} placeholder=\" 질문을 입력하세요.\" class=\"question-1\"></textarea>\n        <button value=\"등록\" class=\"commentRegisterBtn\"\n        onClick={() => registerQuestion(item.id)}>등록</button>\n    </div>\n\n    <ul  className=\"list-group mb-4\">\n            {testStr.comment && testStr.comment.map(comment => (\n                <li key={comment.answerId}>\n                        <>                \n                { comment.answerDepth == 0 && \n                <>\n                    <div className=\"commentWrapper\">\n                        <div>\n                            <img className=\"commentImage\"\n                                src=\"/img/comment.png\" />\n                        </div>\n                        <div className=\"commentCotentContainer\" key={comment.id}>\n                            <span className=\"commentNameText\">{comment.answerEmail}</span>\n                            <span className=\"commentRegTime\">{comment.answerRegTime}</span>\n                            <span className=\"commentCommentText\">{comment.answerContent}.</span>\n                            <input type=\"button\" value=\"답변\" className=\"commentRegisterBtn2\" id={comment.answerId}\n                            onClick={(e) => showAnswerForm(comment.answerId, e)}/>\n                            {/* <p>{answerId}</p> */}\n                        </div>\n                    </div>\n                    {answerId == comment.answerId && (\n                    <div class=\"commentAnswerForm\" >\n                        <textarea onChange={inputAnswer} placeholder=\" 답변을 입력하세요.\" class=\"question-1\"></textarea>\n                        <button value=\"등록\" class=\"commentRegisterBtn\"\n                        onClick={() => registerAnswer(item.id, comment.groupId)}>등록</button>\n                    </div>\n                )}\n                </>    \n                }\n\n                {comment.answerDepth == 1 &&\n                    <div className=\"commentWrapper2\">\n                        <div>\n                            <img className=\"commentImage\"\n                            src=\"/img/comment.png\" />\n                        </div>\n\n                        <div className=\"commentCotentContainer\" key={comment.id}>\n                            <span className=\"commentNameText\">{comment.answerEmail}</span>\n                            <span className=\"commentRegTime\">{comment.answerRegTime}</span>\n                            <span className=\"commentCommentText\">{comment.answerContent}.</span>                    \n                        </div>\n                    </div>        \n                }                \n                \n            </>\n                    \n            </li>\n            ))}\n        </ul>\n\n        </>\n        </>\n\n\n        );\n        })}\n\n<>\n\n        <div>\n            <ul className='pagination justify-content-center'>\n\n            <li className='page-item'>\n                <a className='page-link'  disabled={pageNum==0?true:false} \n                href={'?page='+ (pageNum)} type='button'\n                onClick={prevPage}\n                >Previous\n                </a>\n            </li>\n            {arr.map((arr) => {\n                return(\n                    <>\n                <li className='page-item'>\n                        <a className='page-link'\n                        href={'?page=' + (arr-1)} \n                        onClick={(e) => clickPage(arr-1, e)}\n                        >{arr} \n                        </a>\n                    </li>\n                    </>\n                )\n            })}\n\n            <li className='page-item'>\n                <a className=\"page-link\"  disabled={(pageNum+1)==pageNum?true:false } \n                href={'?page=' + (pageNum)} type='button'\n                onClick={(e)=>nextPage(pageNum, e)} \n                >Next\n                </a>\n            </li>\n        </ul>\n        </div>\n</>     \n    </div>\n);        \n}\n\nexport default ItemDtl;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\ItemUpdate.jsx",["193","194","195"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport './ItemForm.css';\nimport { useParams } from 'react-router-dom';\n\nfunction ItemUpdate(props) {\n\n    let formData = new FormData();\n\n    const [ testStr, setTestStr ] = useState('');\n    // 변수 초기화\n    function callback(str) {\n      setTestStr(str);\n    }\n\n    function itemNew(e){\n        e.preventDefault();\n    }\n\n    const[itemSellStatus, setItemSellStatus] = useState(\"SELL\");\n    const[itemNm, setItemNm] = useState(\"\");\n    const[stockNumber, setStockNumber] = useState(\"\");\n    const[itemDtl, setItemDtl] = useState(\"\");\n    const[itemImgIds, setItemImgIds] = useState(\"\");\n    const[itemId, setItemId] = useState(\"\");\n\n    const handleChangeItemSellStatue = (event) => {\n        setItemSellStatus(event.target.value);\n    }\n\n    const handleChangeItemNm = (event) => {\n        setItemNm(event.target.value);\n    }\n\n    const handleChangeStockNumber = (event) => {\n        setStockNumber(event.target.value);\n    }\n\n    const handleChangeItemDtl = (event) => {\n        setItemDtl(event.target.value);\n    }\n\n    const handleChangeItemImgIds = (itemImgIds) => {\n        setItemImgIds(itemImgIds);\n    }\n\n    const handleChangeItemId = () => {\n        setItemId(testStr.item[0].id)\n    }\n\n    const onFileChange = (e) => {\n        formData.append(\"imgFile\", e.target.files[0]);\n    }\n\n    const params = useParams();\n\n    useEffect(\n        () => {\n            const itemId = params.itemId;\n          axios({\n              url: '/admin/item/'+itemId,\n              method: 'GET',\n              headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              }\n          }).then((res) => {\n              callback(res.data);\n\n              if(res.data.problem != false) {\n                alert(\"상품 수정 중 문제가 발생하였습니다.\");\n              }\n\n              setItemImgIds(res.data.item[0].itemDtoList[0].id);\n              setItemId(res.data.item[0].id)\n          }).catch((error) => {\n            if(error.response.status === 403 || error.response.status === 400) {\n                alert(\"권한이 없습니다.\")\n                window.location.href = \"/members/login\"\n            }\n        })\n        }, []\n    );\n\n    \n    const data = {\n        itemSellStatus: itemSellStatus,\n        itemNm: itemNm,\n        stockNumber: stockNumber,\n        itemDetail: itemDtl,\n        id: itemId,\n        itemImgIds: [itemImgIds]\n    }\n    \n    const jsonData = JSON.stringify(data);\n\n    formData.append(\"data\", new Blob([jsonData], {type: \"application/json\"}));\n\n    // 상품 수정\n    const updateItem = () => {\n        const itemId = params.itemId\n        axios({\n            url: '/admin/item/'+itemId,\n            method: 'POST',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'multipart/form-data' \n            },\n            data : formData\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"상품 수정 중 문제가 발생하였습니다.\");\n            }\n        })\n        window.location.href = \"/\";\n    }\n\n        return(\n            <div className=\"itemFormContainer\">\n            {testStr.item && testStr.item.map ((item) => {\n                <li key={item.id}/>\n                return(\n                    <>\n                     <div>\n                    <h2>상품 수정</h2>\n                    \n                </div>\n            <form onSubmit={itemNew}>\n\n                <div>\n                    <input type='hidden' onChange={handleChangeItemId} />\n                </div>\n\n                <div class=\"form-group\">\n                    <select class=\"form-select\" value={itemSellStatus} onChange={handleChangeItemSellStatue}>\n                        <option value=\"SELL\">판매중</option>\n                        <option value=\"SOLD_OUT\">품절</option>\n                    </select>\n                </div>\n\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">상품명</span>\n                        \n                    </div>\n                    <input value={itemNm} onChange={handleChangeItemNm} \n                    class=\"form-control\" type=\"text\" placeholder=\"상품명을 입력해주세요\"></input>\n                </div>\n\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">재고</span>\n                    </div>\n                    <input value={stockNumber} onChange={handleChangeStockNumber}\n                    class=\"form-control\" type=\"number\" placeholder=\"상품의 재고를 입력해주세요\"></input>\n                </div>\n\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">상품 상세 내용</span>\n                    </div>\n                    <textarea value={itemDtl} onChange={handleChangeItemDtl}\n                    class=\"form-control\"></textarea>   \n\n                </div>\n\n                <div>\n                    <input type=\"file\" name=\"imgFile\" onChange={onFileChange}/>\n                    <input type=\"hidden\" name=\"itemImgIds\"\n                    onChange={()=>handleChangeItemImgIds(item.itemDtoList[0].id)}/>\n                </div>\n        \n\n                {/* 수정 버튼 */}\n                <div className=\"d-grid\">\n                    <button type=\"submit\" className=\"btn btn-primary\"\n                    onClick={()=>updateItem()}\n                    formAction={'/admin/item/'+item.id}\n                    >\n                        Update\n                    </button>\n                </div>\n\n            </form>\n                    </>\n                );\n               \n            })}\n            </div>\n        );\n}\n\nexport default ItemUpdate;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\ItemMng.jsx",["196","197","198","199","200","201"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport './ItemMng.css';\n\nfunction ItemMng(props) {\n\n    const [ testStr, setTestStr ] = useState('');\n    const[pageNum, setPageNum] = useState(0);\n    const[itemMngCount, setItemMngCount] = useState(0)\n\n    // 변수 초기화\n    function callback(str) {\n    setTestStr(str);\n    }\n\n    \n    useEffect(\n        () => {\n         axios({\n            url: '/item/itemMng',\n            method: 'GET',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            params: {\n                \"pageNum\": pageNum\n            }\n        }).then((res) => {\n            callback(res.data);\n            setItemMngCount(res.data.itemMngCount);\n            if(res.data.problem != false) {\n                alert(\"상품 목록을 불러오던 중 문제가 발생하였습니다.\");\n            }\n        }).catch((error) => {\n            if(error.response.status === 403 || error.response.status === 400) {\n                alert(\"주문 권한이 없습니다.\")\n                window.location.href = \"/members/login\"\n            }\n        })\n        }, []\n); \n\nlet arr = []\nfor(let i = 0 ; i < Math.ceil(itemMngCount/10) ; i++) {\n    arr.push(i+1)\n}\n\n    const prevPage = (e) => {\n        e.preventDefault();\n        if (pageNum === 0) {\n            alert(\"첫번째 페이지 입니다.\")\n        } else {\n            setPageNum(pageNum - 1);\n            axios({\n                url: '/item/itemMng',\n                method: 'GET',\n                params: {\n                    \"pageNum\": pageNum-1\n                }\n            }).then((res) => {\n                callback(res.data);\n            })\n        }\n        \n    }\n\n    const nextPage = (pageNum, e) => {\n        e.preventDefault();\n        if(pageNum >= Math.ceil(itemMngCount/10) - 1) {\n            alert(\"마지막 페이지입니다.\")\n        } else {\n            setPageNum(pageNum + 1);\n            axios({\n                url: '/item/itemMng',\n                method: 'GET',\n                params: {\n                    \"pageNum\": pageNum+1\n                }\n            }).then((res) => {\n                callback(res.data);\n            })\n        }\n    }\n\n    const clickPage = (arr, e) => {\n        e.preventDefault();\n        setPageNum(arr)\n        axios({\n            url: '/item/itemMng',\n            method: 'GET',\n            params: {\n                \"pageNum\": arr\n            }\n        }).then((res) => {\n            callback(res.data);\n        })\n    }\n\n\n// 상품명 검색\n    const[search, setSearch] = useState('')\n    const handleSearchChange = (event) => {\n        setSearch(event.target.value);\n    }\n\n    // 판매상태 검색\n    const [searchSellStatus, setSearchSellStatus] = useState('');\n    const HandleOptionOrderState = (e) => {\n        setSearchSellStatus(e.target.value);\n    }\n\n\n    const handleSearchClick = (e) => {\n        e.preventDefault();\n        axios({\n            url: '/item/search',\n            method: 'GET',\n            params: {\n                \"searchName\": search,\n                \"searchStatus\": searchSellStatus\n            }\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"상품 검색 중 문제가 발생하였습니다.\")\n            }\n        })\n    }\n\n\n\n        return(\n            <div className=\"containerItemMng\">\n\n\n            <form role=\"form\" method=\"get\" className='itemMngForm'>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <td>상품아이디</td>\n                        <td>상품명</td>\n                        <td>상품개수</td>\n                        <td>상태</td>\n                        <td>등록자</td>\n                        <td>등록일</td>\n                    </tr>\n                    </thead>\n\n                    <tbody> \n                    {testStr.item && testStr.item.map((item) => {\n                <li key={item.id}/>\n                return(\n                        <tr>\n                            <td >{item.id}</td>\n                            <td>\n                                <a href={'/item/update/'+item.id}>{item.name}</a>\n                            </td>\n                            <td>{item.stockNumber}</td>\n                            <td>{item.sellStatus}</td>\n                            <td>{item.createdBy}</td>\n                            <td>{item.regTime}</td>\n                        </tr>\n                )\n            })}\n                    </tbody>\n\n                </table>\n\n\n                <div class=\"form-control-main-itemMng\">\n                    {/* <select  >\n                        <option value=\"all\">전체기간</option>\n                        <option value=\"1d\">1일</option>\n                        <option value=\"1w\">1주</option>\n                        <option value=\"1m\">1개월</option>\n                        <option value=\"6m\">6개월</option>\n                    </select> */}\n                    <select  onChange={HandleOptionOrderState}>\n                        <option value=\"ALL\">판매상태(전체)</option>\n                        <option value=\"SELL\">판매</option>\n                        <option value=\"SOLD_OUT\">품절</option>\n                    </select>\n                    <select >\n                        <option value=\"itemNm\">상품명</option>\n                    </select>\n\n                    <input type=\"text\" placeholder=\"검색어를 입력해주세요\"\n                    value={search} onChange={handleSearchChange}/>\n                    <button id=\"searchBtn\" type=\"submit\" className=\"btn btn-primary\"\n                     onClick={handleSearchClick}\n                    >검색</button>\n                </div>\n            </form>\n\n            <>\n\n            <div>\n                <ul className='pagination justify-content-center'>\n\n                <li className='page-item'>\n                    <a className='page-link'  disabled={pageNum==0?true:false} \n                    href={'?page='+ (pageNum)} type='button'\n                    onClick={prevPage}\n                    >Previous\n                    </a>\n                </li>\n                {arr.map((arr) => {\n                    return(\n                        <>\n                    <li className='page-item'>\n                            <a className='page-link'\n                            href={'?page=' + (arr-1)} \n                            onClick={(e) => clickPage(arr-1, e)}\n                            >{arr} \n                            </a>\n                        </li>\n                        </>\n                    )\n                })}\n\n                <li className='page-item'>\n                    <a className=\"page-link\"  disabled={(pageNum+1)==pageNum?true:false } \n                    href={'?page=' + (pageNum)} type='button'\n                    onClick={(e)=>nextPage(pageNum, e)} \n                    >Next\n                    </a>\n                </li>\n            </ul>\n            </div>\n</>     \n\n            </div>\n        );\n}\n\nexport default ItemMng;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\main\\Main.jsx",["202","203","204","205","206"],[],"import React, { Component, useState, useEffect } from 'react';\nimport './Main.css';\nimport axios from 'axios'\nimport MainList from './MainList';\nimport 'bootstrap/dist/css/bootstrap.min.css';  \nimport {Container ,Card,Row, Col, Button} from 'react-bootstrap';  \n\nfunction Main(props) {\n\n    const clickToNaver = () => {\n        axios({\n            url: '/naver',\n            method: 'GET',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n        }).then((res) => {\n            alert(\"success\")\n        })\n    \n    }\n\n    return (\n        <div>\n            <Container className=\"mainContainer\">\n            <Button onClick={clickToNaver}>\n                네이버로 이동</Button> \n                <Row className='mainRow'>\n                    <MainList/>\n                </Row>\n            </Container>\n        </div>\n            \n        );\n}\n\n\nexport default Main;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\order\\OrderHist.jsx",["207"],[],"import React, { Component } from 'react';\nimport './OrderHist.css';\nimport OrderHistList from './OrderHistList';\n\nfunction OrderHist(props) {\n        return(\n            <div class=\"containerOrderHist\">\n                \n                \n            <h2 class=\"mb-4\">구매 이력</h2>\n            <div>\n                <OrderHistList/>\n            </div>\n\n            </div>\n        );\n}\n\nexport default OrderHist;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\offer\\OfferHist.jsx",["208"],[],"import React, { Component } from 'react';\nimport './OfferHist.css';\nimport OfferHistList from './OfferHistList';\n\nfunction OfferHist(props) {\n        return(\n            <div class=\"containerOfferHist\">\n                \n                \n            <h2 class=\"mb-4\">판매 이력</h2>\n            <div>\n\n                <OfferHistList/>\n\n            </div>\n            </div>\n        );\n}\n\nexport default OfferHist;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\cart\\CartList.jsx",["209","210","211","212","213","214","215","216","217","218","219","220","221"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport './Cart.css';\n\nfunction CartList() {\n\n    const [ testStr, setTestStr ] = useState('');\n    // 변수 초기화\n    function callback(str) {\n      setTestStr(str);\n    }\n\n    useEffect(\n        () => {\n          axios({\n              url: '/carts',\n              method: 'GET',\n              headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              }\n          }).then((res) => {\n              callback(res.data);\n              if(res.data.problem != false) {\n                alert(\"상품을 장바구니에 담던 중 문제가 발생하였습니다.\");\n              }\n          })\n        }, []\n    );\n\n    //장바구니 취소\n    const deletedCart = id => {\n        axios({\n            url: '/cartItem/'+id,\n            method: 'DELETE',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              }\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"상품을 삭제하던 중 문제가 발생하였습니다.\");\n            } else {\n            alert(\"해당 상품이 삭제되었습니다.\");\n            window.location.href=\"/cart/Cart\"\n            }\n        }).catch((error) => {\n            if(error.response.status === 403 || error.response.status === 400) {\n                alert(\"주문 권한이 없습니다.\")\n                window.location.href = \"/members/login\"\n            }\n        })\n    }\n \n    // 구매수량 가져오기\n    const [orderStockNumber, setOrderStockNumber] = useState(\"1\");\n\n    const handleChangeOrderStockNumber = (count, event) => {\n        setOrderStockNumber(event.target.value)\n    }    \n\n    // 체크박스 핸들러\n    const [checkItems, setCheckItems] = useState([]);\n\n    // 체크박스 하나씩 선택\n    const handleCheckbox = (checked, id) => {\n\n        if(checked) {\n            setCheckItems(prev => [...prev, id]);\n        } else {\n            setCheckItems(checkItems.filter((el) => el != id));\n        }\n        \n    }\n\n    //체크박스 전부 선택\n    const checkAll = (checked) => {\n        const {cartItem} = checkItems;\n\n        if(checked) {\n            const idArray = [];\n            testStr.cartItem.forEach((el) => idArray.push(el.itemId));\n            setCheckItems(idArray);\n        } else {\n            setCheckItems([]);\n        }\n    }\n\n\n    // 주문하기\n\n    const dataList = new Array();\n    const dataList2 = new Array();\n    const orderParamData = new Object();\n    const offerParamData = new Object();\n    const arr = new Array();\n\n    const orders = () => {\n\n        arr.push(checkItems);\n\n        for(let i=0; i<checkItems.length; i++){\n            const data = new Object();\n            data[\"cartItemId\"] = checkItems[i];\n            dataList.push(data);\n            dataList2.push(data);\n        }\n\n        orderParamData['cartOrderDtoList'] = dataList;\n        offerParamData['cartOfferDtoList'] = dataList2;\n        const orderParam = JSON.stringify(orderParamData);\n        const offerParam = JSON.stringify(offerParamData);\n\n        let formData = new FormData();\n        formData.append(\"data\", new Blob([orderParam], {type: \"application/json\"}));\n        formData.append(\"data2\", new Blob([offerParam], {type: \"application/json\"}));\n\n\n\n        axios({\n            url: '/cart/orders', \n            method: 'POST',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            data: formData\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"주문 중 문제가 발생하였습니다.\");\n            } else {\n                alert(\"주문이 완료되었습니다.\");\n            }\n        })\n\n    }\n\n\n\n    return(\n        <>\n        <div class=\"cartContainer\">\n                <div>\n                    <h2 class=\"mb-4\">장바구니 목록</h2>\n                <div>\n\n                <table class=\"table\">\n                    <thead>\n                    <tr class=\"cartListTr1\">\n                        <td>\n                            <input type=\"checkbox\" id=\"checkall\" onChange={(e)=>checkAll(e.target.checked)}/> \n                        </td>\n                        <td>상품정보</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {testStr.cartItem && testStr.cartItem.map((cartItem, id) => {\n            <li key={cartItem.itemId}/>\n                return(\n                    <>\n                    <tr>\n                    <td class=\"text-center align-middle\">\n                        <input type=\"checkbox\" name=\"cartItem\" value={cartItem.itemId}\n                        onChange={(e)=>handleCheckbox(e.target.checked, cartItem.itemId)}\n                        checked={checkItems.includes(cartItem.itemId) ? true : false}/>\n                    </td>\n                    <td class=\"d-flex\">\n                        <div >\n                        <img src={\"https://shopitemimage.s3.ap-northeast-2.amazonaws.com/itemImg/\"+cartItem.oriImgName} class = \"cartImg\"/>\n                        </div>\n                        <div class=\"align-self-center\">\n                            <span class=\"fs24 font-weight-bold\">{cartItem.itemNm}</span>\n                            <div class=\"fs18 font-weight-light\">\n                                <span class=\"input-group mt-2\">\n\n                                    <input type=\"text\" name=\"count\" \n                                         min=\"1\" value={cartItem.count}  class=\"form-control mr-2\"\n                                         onChange={(e) => handleChangeOrderStockNumber(cartItem.count, e)}/>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" onClick={()=>deletedCart(cartItem.itemId)}>\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </span>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n                </>\n                \n                )\n                \n            })}\n                    </tbody>\n                </table>\n\n                <div class=\"text-center mt-3\">\n                    <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={()=>orders()}>\n                        주문하기\n                    </button>\n                </div>\n                \n                </div>\n            </div>\n\n            </div>\n       </>\n    )\n}\n\nexport default CartList;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\test\\CheckboxTest.jsx",[],[],"C:\\Donator-Market\\donator-market-docker\\frontend\\src\\test\\ItemDtlTest.jsx",[],[],"C:\\Donator-Market\\donator-market-docker\\frontend\\src\\test\\ItemFormTest.jsx",[],[],"C:\\Donator-Market\\donator-market-docker\\frontend\\src\\management\\MemberManagement.jsx",["222","223","224","225","226"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport './MemberManagement.css';\r\n\r\nfunction MemberManagement() {\r\n\r\n    const [ memberMng, setMemberMng ] = useState('');\r\n    const[pageNum, setPageNum] = useState(0);\r\n    const maxPage = 10;\r\n\r\n    // 변수 초기화\r\n    function callback(str) {\r\n      setMemberMng(str);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n          axios({\r\n              url: '/members/managements',\r\n              method: 'GET',\r\n              headers: { \r\n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\r\n                'Content-Type': 'application/json' \r\n              },\r\n              params: {\r\n                \"pageNum\": pageNum\r\n              }\r\n          }).then((res) => {\r\n              callback(res.data);\r\n              if(res.data.problem != false) {\r\n                alert(\"회원 정보를 불러오는 중 문제가 발생하였습니다.\")\r\n              }\r\n          }).catch((error) => {\r\n            if(error.response.status === 403 || error.response.status === 400) {\r\n                alert(\"조회 권한이 없습니다.\")\r\n                window.location.href = \"/members/login\"\r\n            }\r\n        })\r\n        }, []\r\n    );\r\n\r\n    const prevPage = (e) => {\r\n        e.preventDefault();\r\n        setPageNum(pageNum - 1);\r\n        axios({\r\n            url: '/members/managements',\r\n            method: 'GET',\r\n            headers: { \r\n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\r\n                'Content-Type': 'application/json' \r\n              },\r\n            params: {\r\n                \"pageNum\": pageNum-1\r\n            }\r\n        }).then((res) => {\r\n            callback(res.data);\r\n        })\r\n    }\r\n\r\n    const nextPage = (pageNum, e) => {\r\n        e.preventDefault();\r\n        setPageNum(pageNum + 1);\r\n        axios({\r\n            url: '/members/managements',\r\n            method: 'GET',\r\n            headers: { \r\n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\r\n                'Content-Type': 'application/json' \r\n              },\r\n            params: {\r\n                \"pageNum\": pageNum+1\r\n            }\r\n        }).then((res) => {\r\n            callback(res.data);\r\n        })\r\n\r\n    }\r\n\r\n    const clickPage = (arr, e) => {\r\n        e.preventDefault();\r\n        setPageNum(arr)\r\n        axios({\r\n            url: '/members/managements',\r\n            method: 'GET',\r\n            headers: { \r\n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\r\n                'Content-Type': 'application/json' \r\n              },\r\n            params: {\r\n                \"pageNum\": arr\r\n            }\r\n        }).then((res) => {\r\n            callback(res.data);\r\n        })\r\n    }\r\n\r\n    const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className='memberMngContainer'>\r\n            <div>\r\n            <h2 class=\"mb-4\">회원 목록</h2>\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <td>아이디</td>\r\n                        <td>이름</td>\r\n                        <td>이메일</td>\r\n                        <td>주소</td>\r\n                        <td>권한</td>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tbody> \r\n                    {memberMng.memberManagement && memberMng.memberManagement.map((member) => {\r\n                    <li key={member.id}/>\r\n                    return(\r\n                        <tr>\r\n                            <td>{member.id}</td>\r\n                            <td>{member.name}</td>\r\n                            <td>{member.email}</td>\r\n                            <td>{member.address}</td>\r\n                            <td>{member.role}</td>\r\n                        </tr>\r\n                    )})}\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div>\r\n            <ul className='pagination justify-content-center'>\r\n\r\n            <li className='page-item'>\r\n                <a className='page-link'  disabled={pageNum==0?true:false} \r\n                href={'?page='+ (pageNum)} type='button'\r\n                onClick={prevPage}\r\n                >Previous\r\n                </a>\r\n            </li>\r\n            {arr.map((arr) => {\r\n                return(\r\n                    <>\r\n                <li className='page-item'>\r\n                        <a className='page-link'\r\n                        href={'?page=' + (arr-1)} \r\n                        onClick={(e) => clickPage(arr-1, e)}\r\n                        >{arr} \r\n                        </a>\r\n                    </li>\r\n                    </>\r\n                )\r\n            })}\r\n\r\n            <li className='page-item'>\r\n                <a className=\"page-link\"  disabled={(pageNum+1)==pageNum?true:false } \r\n                href={'?page=' + (pageNum)} type='button'\r\n                onClick={(e)=>nextPage(pageNum, e)} \r\n                >Next\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MemberManagement;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\logistics\\Logistics.jsx",["227","228"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport './Logistics.css';\r\n\r\nfunction Logistics() {\r\n\r\n    const [ testStr, setTestStr ] = useState('');\r\n\r\n    // 변수 초기화\r\n    function callback(str) {\r\n    setTestStr(str);\r\n    }\r\n\r\n\r\n    const[search, setSearch] = useState('')\r\n    const handleSearchChange = (event) => {\r\n        setSearch(event.target.value);\r\n    }\r\n\r\n    const handleSearchClick = (e) => {\r\n        e.preventDefault();\r\n        axios({\r\n            url: '/logistics/search',\r\n            method: 'POST',\r\n            headers: { \r\n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\r\n                'Content-Type': 'application/json' \r\n            },\r\n            params: {\r\n                \"searchName\": search\r\n            }\r\n        }).then((res) => {\r\n            console.log(search)\r\n            callback(res.data);\r\n            axios({\r\n                url: '/logistics/show',\r\n                method: 'GET',\r\n                headers: { \r\n                    'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\r\n                    'Content-Type': 'application/json' \r\n                }\r\n            }).then((res) => {\r\n                console.log(res.data)\r\n                callback(res.data);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n        return(\r\n            <div className=\"containerItemMng\">\r\n\r\n            <input type=\"text\" placeholder=\"운송번호를 입력해주세요\"\r\n                value={search} onChange={handleSearchChange}/>\r\n            <button id=\"searchBtn\" type=\"submit\" className=\"btn btn-primary\"\r\n                onClick={handleSearchClick}>\r\n                    배송조회\r\n            </button>\r\n\r\n\r\n            <form role=\"form\" method=\"get\" className='itemMngForm'>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <td>운송번호</td>\r\n                        <td>배송시간</td>\r\n                        <td>배송상태</td>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tbody> \r\n                        {testStr.logistic && testStr.logistic.map((logistic) => {\r\n                            return(\r\n                                <tr>\r\n                                    <td>{logistic.logistic}</td>\r\n                                    <td>{logistic.date}</td>\r\n                                    <td>{logistic.status}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </form>\r\n\r\n        \r\n\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Logistics;   ","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\item\\Recomment.jsx",[],[],"C:\\Donator-Market\\donator-market-docker\\frontend\\src\\main\\MainList.jsx",["229","230","231","232","233","234","235","236","237","238"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css';  \nimport {Container ,Card,Row, Col, Button} from 'react-bootstrap';  \nimport './Main.css';\nimport Pagination from 'react-js-pagination';\n\nfunction MainList() {\n\n\n    const [ testStr, setTestStr ] = useState('');\n    const[pageNum, setPageNum] = useState(0);\n    const [itemCount, setItemCount] = useState(0);\n\n    // 변수 초기화\n    function callback(str) {\n    setTestStr(str);\n    }\n\n    \n    useEffect(\n        () => {\n         axios({\n            url: '/main',\n            method: 'GET',\n            params: {\n                \"pageNum\": pageNum\n            }\n        }).then((res) => {\n            callback(res.data);\n            setItemCount(res.data.itemCount);\n            console.log(res.data)\n            if(res.data.problem != false) {\n                alert(\"화면을 불러오는데 문제가 발생하였습니다.\");\n            }\n        })\n        }, []\n); \n\nlet arr = []\nfor(let i = 0 ; i < Math.ceil(itemCount/9) ; i++) {\n    arr.push(i+1)\n}\n\n        const prevPage = (e) => {\n            e.preventDefault();\n            if (pageNum === 0) {\n                alert(\"첫번째 페이지 입니다.\")\n            } else {\n                setPageNum(pageNum - 1);\n                axios({\n                    url: '/main',\n                    method: 'GET',\n                    params: {\n                        \"pageNum\": pageNum-1\n                    }\n                }).then((res) => {\n                    callback(res.data);\n                    console.log(\"prevPage \", res.data.itemsObj[0].pageNum);\n                })\n            }\n        }\n    \n        const nextPage = (pageNum, e) => {\n            e.preventDefault();\n            if(pageNum >= Math.ceil(itemCount/9) - 1) {\n                alert(\"마지막 페이지입니다.\")\n            } else {\n                setPageNum(pageNum + 1);\n                console.log(\"after \", pageNum)\n                axios({\n                    url: '/main',\n                    method: 'GET',\n                    params: {\n                        \"pageNum\": pageNum+1\n                    }\n                }).then((res) => {\n                    callback(res.data);\n                    console.log(\"nextPage \", res.data.itemsObj[0].pageNum);\n                })\n            }\n        }\n\n        const clickPage = (arr, e) => {\n            e.preventDefault();\n            setPageNum(arr)\n            console.log(arr)\n            axios({\n                url: '/main',\n                method: 'GET',\n                params: {\n                    \"pageNum\": arr\n                }\n            }).then((res) => {\n                callback(res.data);\n                console.log(\"nextPage \", res.data.itemsObj[0].pageNum);\n            })\n        }\n   \n    return(\n        <>\n            {testStr.items && testStr.items.map((item) => {\n                return(\n                    <>\n                    \n                        <Card className=\"card\" key={item.id}>\n                            <a href={item.id}>\n                                <img className=\"card-img-top\" src={\"https://shopitemimage.s3.ap-northeast-2.amazonaws.com/itemImg/\"+item.oriImgName} />\n                                <div className=\"card-body\">\n                                    <h4 className=\"card-title\">{item.name}</h4>\n                                    <p className=\"card-text\">{item.dtl}</p>\n                                    <h3 class=\"card-title text-danger\">{item.stockNumber}</h3>\n                                </div>\n                            </a>\n                        </Card>\n                    </>\n                );\n            })}\n                    <>\n\n                    <div>\n                        <ul className='pagination justify-content-center'>\n\n                        <li className='page-item'>\n                            <a className='page-link'  disabled={pageNum==0?true:false} \n                            href={'?page='+ (pageNum)} type='button'\n                            onClick={prevPage}\n                            >Previous\n                            </a>\n                        </li>\n                        {arr.map((arr) => {\n                            return(\n                                <>\n                            <li className='page-item'>\n                                    <a className='page-link'\n                                    href={'?page=' + (arr-1)} \n                                    onClick={(e) => clickPage(arr-1, e)}\n                                    >{arr} \n                                    </a>\n                                </li>\n                                </>\n                            )\n                        })}\n\n                        <li className='page-item'>\n                            <a className=\"page-link\"  disabled={(pageNum+1)==pageNum?true:false } \n                            href={'?page=' + (pageNum)} type='button'\n                            onClick={(e)=>nextPage(pageNum, e)} \n                            >Next\n                            </a>\n                        </li>\n                    </ul>\n                    </div>\n                    </>             \n\n           \n\n        </>\n    );\n}\n\nexport default MainList;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\offer\\OfferHistList.jsx",["239","240","241","242","243","244","245"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport \"./OfferHist.css\";\n\n\nfunction OfferHistList() {\n\n    const [ testStr, setTestStr ] = useState('');\n    const[pageNum, setPageNum] = useState(0);\n    const [offerCount, setofferCount] = useState(0);\n\n    // 변수 초기화\n    function callback(str) {\n      setTestStr(str);\n    }\n\n    useEffect(\n        () => {\n          axios({\n              url: '/offers',\n              method: 'GET',\n              headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n              params: {\n                \"pageNum\": pageNum\n              }\n          }).then((res) => {\n              callback(res.data);\n              setofferCount(res.data.offerCount);\n              console.log(res.data)\n              if(res.data.problem != false) {\n                alert(\"판매이력을 불러오던 중 문제가 발생하였습니다.\")\n              }\n          }).catch((error) => {\n            if(error.response.status === 403 || error.response.status === 400) {\n                alert(\"권한이 없습니다.\")\n                window.location.href = \"/members/login\"\n            }\n        })\n        }, []\n    );\n\n\n    // 페이징\n    let arr = []\n    for(let i = 0 ; i < Math.ceil(offerCount/5) ; i++) {\n        arr.push(i+1)\n    }\n    \n    const prevPage = (e) => {\n        e.preventDefault();\n        if (pageNum === 0) {\n            alert(\"첫번째 페이지 입니다.\")\n        } else {\n            setPageNum(pageNum - 1);\n            axios({\n                url: '/offers',\n                method: 'GET',\n                headers: { \n                    'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                    'Content-Type': 'application/json' \n                  },\n                params: {\n                    \"pageNum\": pageNum-1\n                }\n            }).then((res) => {\n                callback(res.data);\n            })\n        }\n    }\n\n    const nextPage = (pageNum, e) => {\n        e.preventDefault();\n        if(pageNum >= Math.ceil(offerCount/5) - 1) {\n            alert(\"마지막 페이지입니다.\")\n        } else {\n            setPageNum(pageNum + 1);\n            console.log(\"after \", pageNum)\n            axios({\n                url: '/offers',\n                method: 'GET',\n                headers: { \n                    'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                    'Content-Type': 'application/json' \n                  },\n                params: {\n                    \"pageNum\": pageNum+1\n                }\n            }).then((res) => {\n                callback(res.data);\n            })\n        }\n    }\n\n    const clickPage = (arr, e) => {\n        e.preventDefault();\n        console.log(arr)\n        setPageNum(arr)\n        axios({\n            url: '/offers',\n            method: 'GET',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            params: {\n                \"pageNum\": arr\n            }\n        }).then((res) => {\n            callback(res.data);\n            console.log(res.data)\n        })\n    }\n\n    // 주문취소\n    const cancelOffer = (id) => {\n\n        const paramData = {\n            offerId: id\n        }\n\n        const param = JSON.stringify(paramData);\n\n        axios({\n            url: '/offer/'+id+\"/cancel\",\n            method: 'POST',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            data: param\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"주문을 취소하던 중 문제가 발생하였습니다.\")\n            }\n            window.location.href='/offer/OfferHist';\n        })\n    }\n\n    return(\n        <>\n            {testStr.offerItem && testStr.offerItem.map((offerItem) => {\n                <li key={offerItem.id} />\n                return(\n                    <div className=\"offerHistListForm\">\n                    <div class=\"d-flex mb-3 align-self-center\">\n                        <h4 >{offerItem.date}  </h4>\n                        <div class=\"ml-3\">\n\n                            {\n                                offerItem.status == \"Offer\"\n                                ? <button type=\"button\" class=\"btn btn-outline-secondary\"  \n                                onClick={()=>cancelOffer(offerItem.id)}> 주문취소</button>\n                                : <h4>(취소 완료)</h4>\n                            }\n\n                        </div>\n                    </div>\n\n                    <div class=\"cardOfferHist\">\n                    <div class=\"d-flex mb-3\">\n\n                        <div class=\"repImgDiv\">\n                            <img src={\"https://shopitemimage.s3.ap-northeast-2.amazonaws.com/itemImg/\"+offerItem.itemDtoList[0].oriImgName} class = \"imgOfferHist\" />\n                        </div>\n\n                        <div class=\"contentsOfferHist\">\n                            <span  class=\"fs24 font-weight-bold\">{offerItem.itemDtoList[0].itemNm}</span>\n                            <div class=\"fs18 font-weight-light\">\n                                <span>{offerItem.itemDtoList[0].count}</span>\n                            </div>\n                            <div class=\"fs18 font-weight-light\">\n                                <span>구매자: </span>\n                                <span >{offerItem.itemDtoList[0].itemBuyer}</span>\n                            </div>\n                            {/* <div class=\"fs18 font-weight-light\">\n                                <span>배송번호: </span>\n                                <span >{offerItem.logistic}</span>\n                            </div> */}\n                        </div>\n                        \n                    </div>\n                </div>\n                </div>\n                )                    \n\n        })}\n\n<>\n\n<div>\n    <ul className='pagination justify-content-center'>\n\n    <li className='page-item'>\n        <a className='page-link'  disabled={pageNum==0?true:false} \n        href={'?page='+ (pageNum)} type='button'\n        onClick={prevPage}\n        >Previous\n        </a>\n    </li>\n    {arr.map((arr) => {\n        return(\n            <>\n        <li className='page-item'>\n                <a className='page-link'\n                href={'?page=' + (arr-1)} \n                onClick={(e) => clickPage(arr-1, e)}\n                >{arr} \n                </a>\n            </li>\n            </>\n        )\n    })}\n\n    <li className='page-item'>\n        <a className=\"page-link\"  disabled={(pageNum+1)==pageNum?true:false } \n        href={'?page=' + (pageNum)} type='button'\n        onClick={(e)=>nextPage(pageNum, e)} \n        >Next\n        </a>\n    </li>\n</ul>\n</div>\n</>\n        </>\n    )\n}\n\nexport default OfferHistList;","C:\\Donator-Market\\donator-market-docker\\frontend\\src\\order\\OrderHistList.jsx",["246","247","248","249","250","251","252","253","254","255","256"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport OrderHist from \"./OrderHist\";\nimport { alertTitleClasses } from '@mui/material';\n\nfunction OrderHistList() {\n    const [ testStr, setTestStr ] = useState('');\n    const[pageNum, setPageNum] = useState(0);\n    const [orderCount, setOrderCount] = useState(0);\n    const page = []\n    const [page2, setPage2] = useState(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n\n    // 변수 초기화\n    function callback(str) {\n      setTestStr(str);\n    }\n\n    useEffect(\n        () => {\n          axios({\n              url: '/orders',\n              method: 'GET',\n              headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n              params: {\n                \"pageNum\": pageNum\n              }\n          }).then((res) => {\n              callback(res.data);\n              setOrderCount(res.data.orderCount);\n            \n              if(res.data.problem != false) {\n                alert(\"구매이력을 불러오던 중 문제가 발생하였습니다.\")\n              }\n          }).catch((error) => {\n                if(error.response.status === 403 || error.response.status === 400) {\n                    alert(\"권한이 없습니다.\")\n                    window.location.href = \"/members/login\"\n                }\n            })\n        }, []\n\n\n    );\n\n    // 페이징\n\n    let arr = []\n    const arrLength = 0\n    for(let i = 0 ; i < Math.ceil(orderCount/5) ; i++) {\n        arr.push(i+1)\n    }\n\n    \n\n    for(let i = 1 ; i < 11 ; i++) {\n        if(arr.length < i) {\n            break;\n        }else {\n            page.push(i);\n        }\n    }\n   \n\n    const index = []\n    for(let i = 0 ; i < Math.ceil(arr.length/10) ; i ++) {\n        index.push(i)\n    }        \n\n\n    const prevPage = (e) => {\n        e.preventDefault();\n        if (pageNum === 0) {\n            alert(\"첫번째 페이지 입니다.\")\n        } else {\n            setPageNum(pageNum - 1);\n        axios({\n            url: '/orders',\n            method: 'GET',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            params: {\n                \"pageNum\": pageNum-1\n            }\n        }).then((res) => {\n            callback(res.data);\n        })\n        }\n    }\n\n    const nextPage = (pageNum, e) => {\n        e.preventDefault();\n        for(let i = 0 ; i < 10 ; i++) {\n            page.pop()\n        }\n        \n        for(let k = 0 ; k < index.length;k++) {\n            if (Math.ceil((pageNum+2)/10) == index[k]) {\n                \n                for(let j = 1 ; j < 11 ; j++) {\n                    if(arr.length < k) {\n                        break;\n                    }else {\n                        page.push(parseInt(j + ((index[k]-1)*10)))\n                        setPage2(page);\n                    }\n                }\n            }\n        }\n\n        \n\n\n        if(pageNum >= Math.ceil(orderCount/5) - 1) {\n            alert(\"마지막 페이지입니다.\")\n        } else {\n            setPageNum(pageNum + 1);\n            axios({\n                url: '/orders',\n                method: 'GET',\n                headers: { \n                    'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                    'Content-Type': 'application/json' \n                  },\n                params: {\n                    \"pageNum\": pageNum+1\n                }\n            }).then((res) => {\n                callback(res.data);\n            })\n        }\n    }\n\n    const clickPage = (page, e) => {\n        e.preventDefault();\n        setPageNum(page)\n        axios({\n            url: '/orders',\n            method: 'GET',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            params: {\n                \"pageNum\": page\n            }\n        }).then((res) => {\n            callback(res.data);\n        })\n    }\n    \n    // 주문취소\n    const cancelOrder = (id) => {\n\n        const paramData = {\n            orderId: id\n        }\n\n        const param = JSON.stringify(paramData);\n\n        axios({\n            url: '/order/'+id+\"/cancel\",\n            method: 'POST',\n            headers: { \n                'Authorization' : 'Bearer ' + localStorage.getItem(\"ACCESS_TOKEN\"),\n                'Content-Type': 'application/json' \n              },\n            data: param\n        }).then((res) => {\n            callback(res.data);\n            if(res.data.problem != false) {\n                alert(\"주문 취소 중 문제가 발생하였습니다.\");\n            }\n            window.location.href = \"/order/orderHist\";\n        })\n    }\n\n    console.log(page)\n    console.log(\"2 \", page2)\n\n\n\n    return(\n        <>\n            {testStr.orderItem && testStr.orderItem.map((orderItem) => {\n                <li key={orderItem.id} />\n\n                    return(\n                        <div className=\"orderHistListForm\">\n                                <div class=\"d-flex mb-3 align-self-center\">\n                                <h4 >{orderItem.orderDate}</h4>\n                                <div class=\"ml-3\">\n\n                                {\n                                orderItem.orderStatus == \"ORDER\"\n                                ? <button type=\"button\" class=\"btn btn-outline-secondary\"  \n                                onClick={()=>cancelOrder(orderItem.id)}> 주문취소</button>\n                                : <h4>(취소 완료)</h4>\n                                }\n\n                                </div>\n                        </div>\n    \n                        \n                            <div class=\"cardOrderHist\">\n                                <div>\n                                    {orderItem.itemDtoList && orderItem.itemDtoList.map((items) => {\n                                        return (\n                                            <div className='d-flex mb-3'>\n                                            <div class=\"repImgDiv\">\n                                                <img src={\"https://shopitemimage.s3.ap-northeast-2.amazonaws.com/itemImg/\"+items.oriImgName} class = \"imgOrderHist\" />\n                                            </div>\n        \n                                            <div class=\"contentsOrderHist\">\n                                                <span  class=\"fs24 font-weight-bold\">{items.itemNm}</span>\n                                                <div class=\"fs18 font-weight-light\">\n                                                    <span>{items.count}</span>\n                                                </div>\n                                                <div class=\"fs18 font-weight-light\">\n                                                    <span>판매자 </span>\n                                                    <span >{items.itemSeller}</span>\n                                                </div>\n                                                <div class=\"fs18 font-weight-light\">\n                                                    <span>배송번호: </span>\n                                                    <span >{orderItem.logistic}</span>\n                                                </div>\n                                            </div>\n                                            </div>\n                                        )\n                                    })}\n                                    \n                                </div>\n                            </div>\n\n                            \n                        </div>\n                    )\n            })}\n                        <>\n\n        <div>\n            <ul className='pagination justify-content-center'>\n\n            <li className='page-item'>\n                <a className='page-link'  disabled={pageNum==0?true:false} \n                href={'?page='+ (pageNum)} type='button'\n                onClick={prevPage}\n                >Previous\n                </a>\n            </li>\n            {page.map((page) => {\n                return(\n                    <>\n                <li className='page-item'>\n                        <a className='page-link'\n                        href={'?page=' + (page-1)} \n                        onClick={(e) => clickPage(page-1, e)}\n                        >{page}\n                        </a>\n                    </li>\n                    </>\n                )\n            })}\n\n            <li className='page-item'>\n                <a className=\"page-link\"  disabled={(pageNum+1)==pageNum?true:false } \n                href={'?page=' + (pageNum)} type='button'\n                onClick={(e)=>nextPage(pageNum, e)} \n                >Next\n                </a>\n            </li>\n        </ul>\n        </div>\n        </>\n        </>\n    )\n}\n\nexport default OrderHistList;",{"ruleId":"257","severity":1,"message":"258","line":4,"column":17,"nodeType":"259","messageId":"260","endLine":4,"endColumn":25},{"ruleId":"257","severity":1,"message":"261","line":4,"column":27,"nodeType":"259","messageId":"260","endLine":4,"endColumn":36},{"ruleId":"257","severity":1,"message":"262","line":1,"column":38,"nodeType":"259","messageId":"260","endLine":1,"endColumn":47},{"ruleId":"257","severity":1,"message":"263","line":1,"column":49,"nodeType":"259","messageId":"260","endLine":1,"endColumn":59},{"ruleId":"257","severity":1,"message":"264","line":30,"column":13,"nodeType":"259","messageId":"260","endLine":30,"endColumn":20},{"ruleId":"265","severity":1,"message":"266","line":63,"column":24,"nodeType":"267","messageId":"268","endLine":63,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":63,"column":52,"nodeType":"267","messageId":"268","endLine":63,"endColumn":54},{"ruleId":"265","severity":1,"message":"266","line":76,"column":25,"nodeType":"267","messageId":"268","endLine":76,"endColumn":27},{"ruleId":"265","severity":1,"message":"266","line":76,"column":49,"nodeType":"267","messageId":"268","endLine":76,"endColumn":51},{"ruleId":"265","severity":1,"message":"266","line":94,"column":28,"nodeType":"267","messageId":"268","endLine":94,"endColumn":30},{"ruleId":"265","severity":1,"message":"266","line":94,"column":53,"nodeType":"267","messageId":"268","endLine":94,"endColumn":55},{"ruleId":"265","severity":1,"message":"266","line":108,"column":32,"nodeType":"267","messageId":"268","endLine":108,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":108,"column":56,"nodeType":"267","messageId":"268","endLine":108,"endColumn":58},{"ruleId":"265","severity":1,"message":"266","line":122,"column":32,"nodeType":"267","messageId":"268","endLine":122,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":122,"column":58,"nodeType":"267","messageId":"268","endLine":122,"endColumn":60},{"ruleId":"257","severity":1,"message":"261","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"269","line":5,"column":10,"nodeType":"259","messageId":"260","endLine":5,"endColumn":13},{"ruleId":"257","severity":1,"message":"264","line":30,"column":13,"nodeType":"259","messageId":"260","endLine":30,"endColumn":20},{"ruleId":"265","severity":1,"message":"270","line":122,"column":33,"nodeType":"267","messageId":"268","endLine":122,"endColumn":35},{"ruleId":"257","severity":1,"message":"271","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":13},{"ruleId":"257","severity":1,"message":"258","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"257","severity":1,"message":"261","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"272","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":13},{"ruleId":"257","severity":1,"message":"261","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"273","line":4,"column":8,"nodeType":"259","messageId":"260","endLine":4,"endColumn":14},{"ruleId":"257","severity":1,"message":"264","line":10,"column":11,"nodeType":"259","messageId":"260","endLine":10,"endColumn":18},{"ruleId":"257","severity":1,"message":"274","line":22,"column":10,"nodeType":"259","messageId":"260","endLine":22,"endColumn":19},{"ruleId":"257","severity":1,"message":"275","line":22,"column":21,"nodeType":"259","messageId":"260","endLine":22,"endColumn":33},{"ruleId":"257","severity":1,"message":"261","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"264","line":8,"column":11,"nodeType":"259","messageId":"260","endLine":8,"endColumn":18},{"ruleId":"265","severity":1,"message":"270","line":75,"column":26,"nodeType":"267","messageId":"268","endLine":75,"endColumn":28},{"ruleId":"265","severity":1,"message":"270","line":77,"column":22,"nodeType":"267","messageId":"268","endLine":77,"endColumn":24},{"ruleId":"257","severity":1,"message":"276","line":5,"column":8,"nodeType":"259","messageId":"260","endLine":5,"endColumn":17},{"ruleId":"265","severity":1,"message":"270","line":53,"column":33,"nodeType":"267","messageId":"268","endLine":53,"endColumn":35},{"ruleId":"265","severity":1,"message":"270","line":116,"column":33,"nodeType":"267","messageId":"268","endLine":116,"endColumn":35},{"ruleId":"257","severity":1,"message":"277","line":134,"column":12,"nodeType":"259","messageId":"260","endLine":134,"endColumn":22},{"ruleId":"257","severity":1,"message":"278","line":134,"column":24,"nodeType":"259","messageId":"260","endLine":134,"endColumn":37},{"ruleId":"265","severity":1,"message":"270","line":171,"column":33,"nodeType":"267","messageId":"268","endLine":171,"endColumn":35},{"ruleId":"265","severity":1,"message":"270","line":220,"column":35,"nodeType":"267","messageId":"268","endLine":220,"endColumn":37},{"ruleId":"279","severity":1,"message":"280","line":224,"column":12,"nodeType":"281","endLine":224,"endColumn":14,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":296,"column":29,"nodeType":"285","endLine":296,"endColumn":158},{"ruleId":"265","severity":1,"message":"266","line":358,"column":39,"nodeType":"267","messageId":"268","endLine":358,"endColumn":41},{"ruleId":"283","severity":1,"message":"284","line":362,"column":29,"nodeType":"285","endLine":363,"endColumn":58},{"ruleId":"265","severity":1,"message":"266","line":374,"column":31,"nodeType":"267","messageId":"268","endLine":374,"endColumn":33},{"ruleId":"265","severity":1,"message":"266","line":384,"column":38,"nodeType":"267","messageId":"268","endLine":384,"endColumn":40},{"ruleId":"283","severity":1,"message":"284","line":387,"column":29,"nodeType":"285","endLine":388,"endColumn":54},{"ruleId":"265","severity":1,"message":"266","line":418,"column":60,"nodeType":"267","messageId":"268","endLine":418,"endColumn":62},{"ruleId":"265","severity":1,"message":"266","line":439,"column":64,"nodeType":"267","messageId":"268","endLine":439,"endColumn":66},{"ruleId":"265","severity":1,"message":"270","line":70,"column":35,"nodeType":"267","messageId":"268","endLine":70,"endColumn":37},{"ruleId":"279","severity":1,"message":"286","line":82,"column":12,"nodeType":"281","endLine":82,"endColumn":14,"suggestions":"287"},{"ruleId":"265","severity":1,"message":"270","line":112,"column":33,"nodeType":"267","messageId":"268","endLine":112,"endColumn":35},{"ruleId":"265","severity":1,"message":"270","line":32,"column":33,"nodeType":"267","messageId":"268","endLine":32,"endColumn":35},{"ruleId":"279","severity":1,"message":"288","line":41,"column":12,"nodeType":"281","endLine":41,"endColumn":14,"suggestions":"289"},{"ruleId":"265","severity":1,"message":"270","line":125,"column":33,"nodeType":"267","messageId":"268","endLine":125,"endColumn":35},{"ruleId":"290","severity":1,"message":"291","line":137,"column":13,"nodeType":"285","endLine":137,"endColumn":68},{"ruleId":"265","severity":1,"message":"266","line":202,"column":64,"nodeType":"267","messageId":"268","endLine":202,"endColumn":66},{"ruleId":"265","severity":1,"message":"266","line":223,"column":68,"nodeType":"267","messageId":"268","endLine":223,"endColumn":70},{"ruleId":"257","severity":1,"message":"262","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":1,"column":28,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"261","line":1,"column":38,"nodeType":"259","messageId":"260","endLine":1,"endColumn":47},{"ruleId":"257","severity":1,"message":"292","line":6,"column":20,"nodeType":"259","messageId":"260","endLine":6,"endColumn":24},{"ruleId":"257","severity":1,"message":"293","line":6,"column":30,"nodeType":"259","messageId":"260","endLine":6,"endColumn":33},{"ruleId":"257","severity":1,"message":"262","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"262","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"265","severity":1,"message":"270","line":24,"column":35,"nodeType":"267","messageId":"268","endLine":24,"endColumn":37},{"ruleId":"265","severity":1,"message":"270","line":42,"column":33,"nodeType":"267","messageId":"268","endLine":42,"endColumn":35},{"ruleId":"257","severity":1,"message":"294","line":57,"column":12,"nodeType":"259","messageId":"260","endLine":57,"endColumn":28},{"ruleId":"265","severity":1,"message":"270","line":72,"column":56,"nodeType":"267","messageId":"268","endLine":72,"endColumn":58},{"ruleId":"257","severity":1,"message":"295","line":79,"column":16,"nodeType":"259","messageId":"260","endLine":79,"endColumn":24},{"ruleId":"296","severity":1,"message":"297","line":93,"column":22,"nodeType":"298","messageId":"299","endLine":93,"endColumn":33},{"ruleId":"296","severity":1,"message":"297","line":94,"column":23,"nodeType":"298","messageId":"299","endLine":94,"endColumn":34},{"ruleId":"300","severity":1,"message":"301","line":95,"column":28,"nodeType":"298","messageId":"299","endLine":95,"endColumn":40},{"ruleId":"300","severity":1,"message":"301","line":96,"column":28,"nodeType":"298","messageId":"299","endLine":96,"endColumn":40},{"ruleId":"296","severity":1,"message":"297","line":97,"column":17,"nodeType":"298","messageId":"299","endLine":97,"endColumn":28},{"ruleId":"300","severity":1,"message":"301","line":104,"column":26,"nodeType":"298","messageId":"299","endLine":104,"endColumn":38},{"ruleId":"265","severity":1,"message":"270","line":131,"column":33,"nodeType":"267","messageId":"268","endLine":131,"endColumn":35},{"ruleId":"283","severity":1,"message":"284","line":171,"column":25,"nodeType":"285","endLine":171,"endColumn":140},{"ruleId":"257","severity":1,"message":"302","line":9,"column":11,"nodeType":"259","messageId":"260","endLine":9,"endColumn":18},{"ruleId":"265","severity":1,"message":"270","line":30,"column":35,"nodeType":"267","messageId":"268","endLine":30,"endColumn":37},{"ruleId":"279","severity":1,"message":"288","line":39,"column":12,"nodeType":"281","endLine":39,"endColumn":14,"suggestions":"303"},{"ruleId":"265","severity":1,"message":"266","line":144,"column":60,"nodeType":"267","messageId":"268","endLine":144,"endColumn":62},{"ruleId":"265","severity":1,"message":"266","line":165,"column":64,"nodeType":"267","messageId":"268","endLine":165,"endColumn":66},{"ruleId":"257","severity":1,"message":"261","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"290","severity":1,"message":"291","line":61,"column":13,"nodeType":"285","endLine":61,"endColumn":68},{"ruleId":"257","severity":1,"message":"304","line":4,"column":9,"nodeType":"259","messageId":"260","endLine":4,"endColumn":18},{"ruleId":"257","severity":1,"message":"305","line":4,"column":25,"nodeType":"259","messageId":"260","endLine":4,"endColumn":28},{"ruleId":"257","severity":1,"message":"293","line":4,"column":30,"nodeType":"259","messageId":"260","endLine":4,"endColumn":33},{"ruleId":"257","severity":1,"message":"306","line":4,"column":35,"nodeType":"259","messageId":"260","endLine":4,"endColumn":41},{"ruleId":"257","severity":1,"message":"307","line":6,"column":8,"nodeType":"259","messageId":"260","endLine":6,"endColumn":18},{"ruleId":"265","severity":1,"message":"270","line":33,"column":33,"nodeType":"267","messageId":"268","endLine":33,"endColumn":35},{"ruleId":"279","severity":1,"message":"288","line":37,"column":12,"nodeType":"281","endLine":37,"endColumn":14,"suggestions":"308"},{"ruleId":"283","severity":1,"message":"284","line":108,"column":33,"nodeType":"285","endLine":108,"endColumn":152},{"ruleId":"265","severity":1,"message":"266","line":125,"column":72,"nodeType":"267","messageId":"268","endLine":125,"endColumn":74},{"ruleId":"265","severity":1,"message":"266","line":146,"column":76,"nodeType":"267","messageId":"268","endLine":146,"endColumn":78},{"ruleId":"265","severity":1,"message":"270","line":33,"column":35,"nodeType":"267","messageId":"268","endLine":33,"endColumn":37},{"ruleId":"279","severity":1,"message":"288","line":42,"column":12,"nodeType":"281","endLine":42,"endColumn":14,"suggestions":"309"},{"ruleId":"265","severity":1,"message":"270","line":136,"column":33,"nodeType":"267","messageId":"268","endLine":136,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":154,"column":50,"nodeType":"267","messageId":"268","endLine":154,"endColumn":52},{"ruleId":"283","severity":1,"message":"284","line":167,"column":29,"nodeType":"285","endLine":167,"endColumn":166},{"ruleId":"265","severity":1,"message":"266","line":198,"column":52,"nodeType":"267","messageId":"268","endLine":198,"endColumn":54},{"ruleId":"265","severity":1,"message":"266","line":219,"column":56,"nodeType":"267","messageId":"268","endLine":219,"endColumn":58},{"ruleId":"257","severity":1,"message":"310","line":3,"column":8,"nodeType":"259","messageId":"260","endLine":3,"endColumn":17},{"ruleId":"257","severity":1,"message":"311","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":27},{"ruleId":"265","severity":1,"message":"270","line":34,"column":35,"nodeType":"267","messageId":"268","endLine":34,"endColumn":37},{"ruleId":"279","severity":1,"message":"288","line":43,"column":12,"nodeType":"281","endLine":43,"endColumn":14,"suggestions":"312"},{"ruleId":"257","severity":1,"message":"313","line":51,"column":11,"nodeType":"259","messageId":"260","endLine":51,"endColumn":20},{"ruleId":"265","severity":1,"message":"266","line":102,"column":43,"nodeType":"267","messageId":"268","endLine":102,"endColumn":45},{"ruleId":"265","severity":1,"message":"270","line":175,"column":33,"nodeType":"267","messageId":"268","endLine":175,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":199,"column":55,"nodeType":"267","messageId":"268","endLine":199,"endColumn":57},{"ruleId":"283","severity":1,"message":"284","line":215,"column":49,"nodeType":"285","endLine":215,"endColumn":167},{"ruleId":"265","severity":1,"message":"266","line":249,"column":60,"nodeType":"267","messageId":"268","endLine":249,"endColumn":62},{"ruleId":"265","severity":1,"message":"266","line":270,"column":64,"nodeType":"267","messageId":"268","endLine":270,"endColumn":66},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Component' is defined but never used.","'useContext' is defined but never used.","'testStr' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'set' is defined but never used.","Expected '!==' and instead saw '!='.","'React' is defined but never used.","'axios' is defined but never used.","'Header' is defined but never used.","'loginName' is assigned a value but never used.","'setLoginName' is assigned a value but never used.","'Recomment' is defined but never used.","'answerForm' is assigned a value but never used.","'setAnswerForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pageNum' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["314"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'params.itemId'. Either include it or remove the dependency array.",["315"],"React Hook useEffect has a missing dependency: 'pageNum'. Either include it or remove the dependency array.",["316"],"jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'Card' is defined but never used.","'Col' is defined but never used.","'orderStockNumber' is assigned a value but never used.","'cartItem' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-new-object","The object literal notation {} is preferable.","'maxPage' is assigned a value but never used.",["317"],"'Container' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","'Pagination' is defined but never used.",["318"],["319"],"'OrderHist' is defined but never used.","'alertTitleClasses' is defined but never used.",["320"],"'arrLength' is assigned a value but never used.",{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"325","fix":"327"},{"desc":"325","fix":"328"},{"desc":"325","fix":"329"},{"desc":"325","fix":"330"},"Update the dependencies array to be: [pageNum, url]",{"range":"331","text":"332"},"Update the dependencies array to be: [params.itemId]",{"range":"333","text":"334"},"Update the dependencies array to be: [pageNum]",{"range":"335","text":"336"},{"range":"337","text":"336"},{"range":"338","text":"336"},{"range":"339","text":"336"},{"range":"340","text":"336"},[6181,6183],"[pageNum, url]",[2270,2272],"[params.itemId]",[1178,1180],"[pageNum]",[1176,1178],[951,953],[1221,1223],[1368,1370]]