//querydsl 추가
buildscript {
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}


group = 'com.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply plugin: "com.ewerk.gradle.plugins.querydsl"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation group: 'org.json', name: 'json', version: '20220320'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.h2database:h2'
	compileOnly("org.springframework.boot:spring-boot-devtools")
//	implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.security:spring-security-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.3'

	//querydsl 추가
	implementation 'com.querydsl:querydsl-jpa'
	//querydsl 추가
	implementation 'com.querydsl:querydsl-apt'
//	implementation "com.querydsl:querydsl-jpa:${queryDslVersi

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
// slf4j & logback
	implementation('org.slf4j:jcl-over-slf4j')
	implementation('ch.qos.logback:logback-classic')
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis'

	compile 'org.springframework.amqp:spring-rabbit:2.4.7'
	compile 'org.springframework.amqp:spring-rabbit:1.5.3.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	compile 'com.rabbitmq:amqp-client:5.16.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
}


tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가
//def querydslDir = 'src/main/generated'
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

jar{
	manifest {
		attributes 'Main-Class' : 'com.shop.ShopApplication'
	}

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}